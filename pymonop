#!/usr/bin/python

import gobject, gtk
from cairo import ImageSurface
from monop import Board
from os import listdir

class MainWin(gtk.Window):
	def destroy(self, *_):
		gtk.Window.destroy(self)
		if self.in_main:
			gtk.mainquit()
			self.in_main = False

	def main(self):
		self.in_main = True
		gtk.main()

	def draw_img(self, cr, img, x, y, w, h, scale = True):
		ix = img.get_width()
		iy = img.get_height()

		if scale:
			r = min(w, h)
			x += (w - r) / 2
			y += (h - r) / 2
			w = h = r

		cr.save()
		cr.rectangle(x, y, w, h)
		cr.clip()
		cr.new_path()

		cr.translate(x, y)
		cr.scale(w/ix, h/iy);
		cr.set_source_surface(img, 0, 0)
		cr.paint()
		cr.restore()

	def draw_box(self, cr, (x, y), boxid):
		(ascent, descent, height, max_x_advance, max_y_advance) = \
			cr.font_extents()
		cr.move_to(x / 20.0, height)
		cr.show_text('%d'%boxid)

		img = self.avatar['bomb.png']
		bx = x / 2
		by = y / 2
		self.draw_img(cr, img, bx - (bx / 2),
					by - (by / 2),
					bx, by)

		#cr.move_to(0, y / 5.0)
		#cr.line_to(x, y / 5.0)
		#cr.stroke()
		return

	def __init__(self):
		gtk.Window.__init__(self, gtk.WINDOW_TOPLEVEL)
		self.in_main = False
		self.connect('destroy', self.destroy)
		self.set_default_size(640, 480)
		self.set_title('Python-Cairo monop client')

		agr = gtk.AccelGroup()
		(k, m) = gtk.accelerator_parse('<Control>Q')
		agr.connect_group(k, m, gtk.ACCEL_VISIBLE, self.destroy)
		self.add_accel_group(agr)

		self.avatar = {}
		for x in listdir('avatars'):
			surf = ImageSurface.create_from_png('avatars/%s'%x)
			self.avatar[x] = surf

		self.board = Board(self.draw_box)
		self.add(self.board)

		self.show_all()

if __name__ == '__main__':
	x = MainWin()
	x.main()
